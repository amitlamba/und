# JACKSON
spring:
  application:
    name: emailsendservice
  thymeleaf:
    cache: false
  jackson:
    serialization:
      INDENT_OUTPUT: true
  redis:
    host: ${REDIS_IP}
    port: ${REDIS_PORT}
  cache:
    redis:
      use-key-prefix: true
  cloud:
      stream:
        kafka:
          binder:
            brokers: ${KAFKA_IP}
            defaultBrokerPort: ${KAFKA_PORT}
            defaultZkPort: 2181
            consumer-configuration:
              maxAttempts: 1
        bindings:
          emailEventSend:
            group: emailEventGroup
            destination: emailEventshiv
            consumer:
              enableDlq: true
              autoCommitOnError: true
              dlqName: emailEventshivError
          clientEmailReceive:
            group: clientEmailReceiveGroup
            destination: clientEmailshiv
            consumer:
              enableDlq: true
              autoCommitOnError: true
              dlqName: emailEventshivError
          clickTrackEventReceive:
            group: clickTrackEventGroup
            destination: clickTrackEventshiv
            consumer:
              enableDlq: true
              autoCommitOnError: true
              dlqName: clickTrackEventshivError
          EmailUpdateReceive:
            group: EmailUpdateReceiveGroup
            destination: EmailUpdateshiv
            consumer:
              enableDlq: true
              autoCommitOnError: true
              dlqName: EmailUpdateshivError
          campaignTriggerReceive:
            group: campaignTriggerReceive
            destination: campaignTriggershiv
            consumer:
              enableDlq: true
              autoCommitOnError: true
              dlqName: campaignTriggershivError
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false

  datasource:
    url: jdbc:postgresql://${POSTGRES_IP}:${POSTGRES_PORT}/shiv
    driver-class-name: org.postgresql.Driver
    username: postgres
    password:  postgres
    tomcat:
      initial-size: 10
      max-wait: 10000
      max-active: 50
      test-on-borrow: true
  data:
    mongodb:
      database: shiv
      host: ${MONGO_IP}
      port: ${MONGO_PORT}

  zipkin:
    base-url: http://springbootzipkin:7777
    sender:
      type: kafka
  sleuth:
    sampler:
      probability: 1
  kafka:
    bootstrap-servers: ${KAFKA_IP}:${KAFKA_PORT}

security:
  header:
    token: authorization
    username: UserName
  secret: mySecret
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh

eureka:
  instance:
    prefer-ip-address: true
    health-check-url-path: /email-service/health
  client:
    register-with-eureka: true
    fetch-registry: true
    region: desktop
    service-url:
      defaultZone: http://${EUREKA_IP}:${EUREKA_PORT}/eureka


logging:
  level:
    org:
      springframework: info
      apache: info
      hibernate: info
    com:
      und: info
  file: log/und-emailsendservice.log


encryption-decryption:
  key:
    default: DaO1TXt5B0R92Yys
    unsubscribe: TaO5T01R9BXt2yYS

und:
  system:
    user:
      token: jasdghajskdhg
  url:
    event: http://userndot.com/event
  auth-url: http://nestros.com:8080/auth
  from-email: shiv@und.com